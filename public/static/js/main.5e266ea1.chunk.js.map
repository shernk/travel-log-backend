{"version":3,"sources":["fetch/API.js","cluster/layer.js","viewport/viewport.js","marker/control-panel.js","zoom-control/controlZoom.js","popup/popUp.js","marker/pin.js","entry/logEntryForm.js","entry/addEntryLocation.js","marker/marker.js","draw-polygon/draw-tool.js","draw-polygon/style.js","draw-polygon/draw.js","App.js","index.js"],"names":["url","process","listLogEntries","a","fetch","response","json","createLogEntry","entry","method","headers","body","JSON","stringify","deleteLogEntry","entryId","clusterLayer","id","type","source","filter","paint","clusterCountLayer","layout","unclusteredPointLayer","ControlPanelViewPort","onSelectCity","entries","className","city","title","map","index","name","onClick","htmlFor","React","ControlPanel","lngLats","viewport","longitude","latitude","zoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","ControlZoom","PopUpLogEntry","setShowPopUp","deleteMarker","closeButton","closeOnClick","dynamicPosition","anchor","onClose","comments","Date","visitDate","toLocaleDateString","image","src","alt","_id","Pin","height","viewBox","style","fill","stroke","d","LogEntryForm","location","useForm","register","handleSubmit","useState","loading","setLoading","error","setError","onSubmit","data","message","required","ref","readOnly","value","rows","disabled","AddEntryLocation","addEntryLocation","setAddEntryLocation","getEntries","offsetTop","offsetLeft","MarkerLogEntry","onMarkerDragStart","onMarkerDrag","onMarkerDragEnd","setGetTitle","draggable","onDragStart","onDrag","onDragEnd","DrawTools","selectedFeatureIndex","editorRef","setMode","onDelete","useCallback","current","deleteFeatures","DrawPolygonMode","getEditHandleStyle","feature","state","RENDER_STATE","SELECTED","HOVERED","UNCOMMITTED","fillOpacity","strokeWidth","r","getFeatureStyle","CLOSING","strokeDasharray","DrawPolygon","mode","setSelectedFeatureIndex","useRef","onSelect","options","onUpdate","editType","EditingMode","width","clickRadius","editHandleShape","featureStyle","editHandleStyle","mapboxgl","workerClass","require","default","App","mapRef","logEntry","setLogEntries","showPopUp","events","setLogEvents","bearing","pitch","setViewport","logEntries","console","log","useEffect","event","_event","lngLat","showAddMarkerPopUp","mapStyle","mapboxApiAccessToken","onViewportChange","onDblClick","interactiveLayerIds","features","clusterId","properties","cluster_id","getMap","getSource","getClusterExpansionZoom","err","geometry","coordinates","cluster","clusterMaxZoom","clusterRadius","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e266ea1.chunk.js","sourcesContent":["const url = `${process.env.REACT_APP_API_URL}/api/routes`;\r\n\r\nexport async function listLogEntries() {\r\n  const response = await fetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport async function createLogEntry(entry) {\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(entry),\r\n  });\r\n  return response.json();\r\n}\r\n\r\nexport async function deleteLogEntry(entryId) {\r\n  const response = await fetch(url + \"/\" + entryId, {\r\n    method: \"DELETE\",\r\n  });\r\n  return response.json();\r\n}\r\n","export const clusterLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'earthquakes',\r\n  filter: ['has', 'point_count'],\r\n  paint: {\r\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\r\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40]\r\n  }\r\n};\r\n\r\nexport const clusterCountLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'earthquakes',\r\n  filter: ['has', 'point_count'],\r\n  layout: {\r\n    'text-field': '{point_count_abbreviated}',\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': 12\r\n  }\r\n};\r\n\r\nexport const unclusteredPointLayer = {\r\n  id: 'unclustered-point',\r\n  type: 'circle',\r\n  source: 'earthquakes',\r\n  filter: ['!', ['has', 'point_count']],\r\n  paint: {\r\n    'circle-color': '#11b4da',\r\n    'circle-radius': 4,\r\n    'circle-stroke-width': 1,\r\n    'circle-stroke-color': '#fff'\r\n  }\r\n};","import * as React from \"react\";\r\n\r\nconst ControlPanelViewPort = ({ onSelectCity, entries }) => {\r\n  return (\r\n    <>\r\n      <div id=\"toggle\" className=\"control-panel viewport\">\r\n        <h3>The Marked Locations</h3>\r\n        <hr />\r\n\r\n        {entries\r\n          .filter((city) => city.title)\r\n          .map((city, index) => (\r\n            <div key={`btn-${index}`} className=\"input\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"city\"\r\n                id={`city-${index}`}\r\n                // defaultChecked={city.title === \"Da Nang\"}\r\n                onClick={() => onSelectCity(city)}\r\n              />\r\n              <label htmlFor={`city-${index}`}>{city.title}</label>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ControlPanelViewPort);\r\n","import * as React from \"react\";\r\nimport ControlPanelViewPort from \"../viewport/viewport\";\r\nimport { FlyToInterpolator } from \"react-map-gl\";\r\n\r\nconst eventNames = [\"onDragStart\", \"onDrag\", \"onDragEnd\"];\r\n\r\nfunction round5(value) {\r\n  return (Math.round(value * 1e5) / 1e5).toFixed(5);\r\n}\r\n\r\nconst ControlPanel = ({ lngLats, title, viewport, entries }) => {\r\n  const onSelectCity = React.useCallback(\r\n    ({ longitude, latitude }) => {\r\n      viewport({\r\n        longitude,\r\n        latitude,\r\n        zoom: 9,\r\n        transitionInterpolator: new FlyToInterpolator({ speed: 2.0 }),\r\n        transitionDuration: \"auto\",\r\n      });\r\n    },\r\n    [viewport]\r\n  );\r\n\r\n  return <ControlPanelViewPort onSelectCity={onSelectCity} entries={entries} />;\r\n};\r\n\r\nexport default React.memo(ControlPanel);\r\n","import { NavigationControl, FullscreenControl } from \"react-map-gl\";\r\n\r\nconst ControlZoom = () => {\r\n  return (\r\n    <div className=\"zoom-control\">\r\n      <div className=\"fullscreenControlStyle\">\r\n        <FullscreenControl />\r\n      </div>\r\n      <div className=\"navStyle\">\r\n        <NavigationControl />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlZoom;\r\n","import { Popup } from \"react-map-gl\";\r\n\r\nconst PopUpLogEntry = ({ entry, setShowPopUp, deleteMarker }) => {\r\n  return (\r\n    <Popup\r\n      latitude={entry.latitude}\r\n      longitude={entry.longitude}\r\n      closeButton={true}\r\n      closeOnClick={false}\r\n      dynamicPosition={true}\r\n      anchor=\"top\"\r\n      onClose={() => setShowPopUp({})}\r\n    >\r\n      <div className=\"popup\">\r\n        <h3>{entry.title}</h3>\r\n        <p>{entry.comments}</p>\r\n        <p htmlFor=\"latitude\">Latitude: {entry.latitude}</p>\r\n        <p htmlFor=\"longitude\">Longitude: {entry.longitude}</p>\r\n        <small>\r\n          Visited on: {new Date(entry.visitDate).toLocaleDateString()}\r\n        </small>\r\n        {entry.image && <img src={entry.image} alt={entry.title} />}\r\n        <div>\r\n          <button\r\n            className=\"delete-entry button-entry\"\r\n            onClick={() => deleteMarker(entry._id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopUpLogEntry;\r\n","const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\nconst Pin = () => {\r\n  return (\r\n    <svg\r\n      height={20}\r\n      viewBox=\"0 0 24 24\"\r\n      style={{ fill: \"#d00\", stroke: \"none\" }}\r\n    >\r\n      <path d={ICON} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Pin;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createLogEntry } from \"../fetch/API\";\r\n\r\nconst LogEntryForm = ({ location, onClose }) => {\r\n  const { register, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true); // when make a request\r\n      data.latitude = location.latitude;\r\n      data.longitude = location.longitude;\r\n      await createLogEntry(data);\r\n      onClose();\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setLoading(false); // then loading has done\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"entry-form\">\r\n      {error ? <h3 className=\"error\">{error}</h3> : null}\r\n      <label htmlFor=\"title\">Title</label>\r\n      <input name=\"title\" required ref={register} />\r\n      <label htmlFor=\"latitude\">Latitude</label>\r\n      <input\r\n        name=\"latitude\"\r\n        readOnly\r\n        required\r\n        ref={register}\r\n        value={location.latitude}\r\n      />\r\n      <label htmlFor=\"longitude\">Longitude</label>\r\n      <input\r\n        name=\"longitude\"\r\n        readOnly\r\n        required\r\n        ref={register}\r\n        value={location.longitude}\r\n      />\r\n      <label htmlFor=\"comments\">Comments</label>\r\n      <textarea name=\"comments\" rows={3} ref={register}></textarea>\r\n      <label htmlFor=\"description\">Description</label>\r\n      <textarea name=\"description\" rows={3} ref={register}></textarea>\r\n      <label htmlFor=\"image\">Image</label>\r\n      <input name=\"image\" ref={register} />\r\n      <label htmlFor=\"visitDate\">Visit Date</label>\r\n      <input name=\"visitDate\" type=\"date\" required ref={register} />\r\n      <button className=\"button-entry\" disabled={loading}>\r\n        {loading ? \"Loading...\" : \"Create Entry\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LogEntryForm;\r\n","import { Marker, Popup } from \"react-map-gl\";\r\nimport Pin from \"../marker/pin\";\r\nimport LogEntryForm from \"./logEntryForm\";\r\n\r\nconst AddEntryLocation = ({\r\n  addEntryLocation,\r\n  setAddEntryLocation,\r\n  getEntries,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Marker\r\n        latitude={addEntryLocation.latitude}\r\n        longitude={addEntryLocation.longitude}\r\n        offsetTop={-20}\r\n        offsetLeft={-10}\r\n      >\r\n        <Pin />\r\n      </Marker>\r\n      \r\n      <Popup\r\n        latitude={addEntryLocation.latitude}\r\n        longitude={addEntryLocation.longitude}\r\n        closeButton={true}\r\n        closeOnClick={false}\r\n        dynamicPosition={true}\r\n        anchor=\"top\"\r\n        onClose={() => setAddEntryLocation(null)}\r\n      >\r\n        <div className=\"popup\">\r\n          <LogEntryForm\r\n            location={addEntryLocation}\r\n            onClose={() => {\r\n              setAddEntryLocation(null); // after created entry, hidden the form\r\n              getEntries(); // next, reload location was marked\r\n            }}\r\n          />\r\n        </div>\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEntryLocation;\r\n","import { Marker } from \"react-map-gl\";\r\nimport Pin from \"./pin\";\r\n\r\nconst MarkerLogEntry = ({\r\n  entry,\r\n  onMarkerDragStart,\r\n  onMarkerDrag,\r\n  onMarkerDragEnd,\r\n  setShowPopUp,\r\n  setGetTitle,\r\n}) => {\r\n  return (\r\n    <Marker\r\n      latitude={entry.latitude}\r\n      longitude={entry.longitude}\r\n      offsetTop={-20}\r\n      offsetLeft={-10}\r\n      draggable\r\n      onDragStart={onMarkerDragStart}\r\n      onDrag={onMarkerDrag}\r\n      onDragEnd={onMarkerDragEnd}\r\n    >\r\n      <div\r\n        className=\"pin\"\r\n        onClick={() => {\r\n          setShowPopUp({ [entry._id]: true });\r\n          setGetTitle(entry.title);\r\n        }}\r\n      >\r\n        <Pin />\r\n      </div>\r\n    </Marker>\r\n  );\r\n};\r\n\r\nexport default MarkerLogEntry","import {DrawPolygonMode} from 'react-map-gl-draw';\r\nimport {useCallback} from 'react'\r\n\r\nconst DrawTools = ({ selectedFeatureIndex, editorRef, setMode }) => {\r\n  const onDelete = useCallback(() => {\r\n    if (selectedFeatureIndex !== null && selectedFeatureIndex >= 0) {\r\n      editorRef.current.deleteFeatures(selectedFeatureIndex);\r\n    }\r\n  }, [selectedFeatureIndex, editorRef]);\r\n\r\n  return (\r\n    <div className=\"mapboxgl-ctrl-top-left\">\r\n      <div className=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\r\n        <button\r\n          className=\"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_polygon\"\r\n          title=\"Polygon tool (p)\"\r\n          onClick={() => setMode(new DrawPolygonMode())}\r\n        />\r\n        <button\r\n          className=\"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_trash\"\r\n          title=\"Delete\"\r\n          onClick={onDelete}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawTools\r\n","import { RENDER_STATE } from \"react-map-gl-draw\";\r\n\r\nexport function getEditHandleStyle({ feature, state }) {\r\n  switch (state) {\r\n    case RENDER_STATE.SELECTED:\r\n    case RENDER_STATE.HOVERED:\r\n    case RENDER_STATE.UNCOMMITTED:\r\n      return {\r\n        fill: \"rgb(251, 176, 59)\",\r\n        fillOpacity: 1,\r\n        stroke: \"rgb(255, 255, 255)\",\r\n        strokeWidth: 2,\r\n        r: 7,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        fill: \"rgb(251, 176, 59)\",\r\n        fillOpacity: 1,\r\n        stroke: \"rgb(255, 255, 255)\",\r\n        strokeWidth: 2,\r\n        r: 5,\r\n      };\r\n  }\r\n}\r\n\r\nexport function getFeatureStyle({ feature, index, state }) {\r\n  switch (state) {\r\n    case RENDER_STATE.SELECTED:\r\n    case RENDER_STATE.HOVERED:\r\n    case RENDER_STATE.UNCOMMITTED:\r\n    case RENDER_STATE.CLOSING:\r\n      return {\r\n        stroke: \"rgb(251, 176, 59)\",\r\n        strokeWidth: 2,\r\n        fill: \"rgb(251, 176, 59)\",\r\n        fillOpacity: 0.3,\r\n        strokeDasharray: \"4,2\",\r\n      };\r\n\r\n    default:\r\n      return {\r\n        stroke: \"rgb(60, 178, 208)\",\r\n        strokeWidth: 2,\r\n        fill: \"rgb(60, 178, 208)\",\r\n        fillOpacity: 0.1,\r\n      };\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { useState, useRef, useCallback } from \"react\";\r\nimport { Editor, EditingMode } from \"react-map-gl-draw\";\r\nimport DrawTools from \"./draw-tool\";\r\nimport { getFeatureStyle, getEditHandleStyle } from \"./style\";\r\n\r\nconst DrawPolygon = () => {\r\n  const [mode, setMode] = useState(null);\r\n  const [selectedFeatureIndex, setSelectedFeatureIndex] = useState(null);\r\n  const editorRef = useRef(null);\r\n\r\n  const onSelect = useCallback((options) => {\r\n    setSelectedFeatureIndex(options && options.selectedFeatureIndex);\r\n  }, []);\r\n\r\n  const onUpdate = useCallback(({ editType }) => {\r\n    if (editType === \"addFeature\") {\r\n      setMode(new EditingMode());\r\n    }\r\n  }, []);\r\n\r\n  // const features = editorRef.current && editorRef.current.getFeatures();\r\n\r\n  // measure of length\r\n  // const length =\r\n  //   features &&\r\n  //   (features[selectedFeatureIndex] || features[features.length - 1]);\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        ref={editorRef}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        clickRadius={12}\r\n        mode={mode}\r\n        onSelect={onSelect}\r\n        onUpdate={onUpdate}\r\n        editHandleShape={\"circle\"}\r\n        featureStyle={getFeatureStyle}\r\n        editHandleStyle={getEditHandleStyle}\r\n      />\r\n      <DrawTools\r\n        selectedFeatureIndex={selectedFeatureIndex}\r\n        editorRef={editorRef}\r\n        setMode={setMode}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrawPolygon;\r\n","import * as React from \"react\";\r\nimport { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport ReactMapGL, { Source, Layer } from \"react-map-gl\";\r\nimport { listLogEntries, deleteLogEntry } from \"./fetch/API\";\r\nimport {\r\n  clusterLayer,\r\n  clusterCountLayer,\r\n  unclusteredPointLayer,\r\n} from \"./cluster/layer\";\r\nimport ControlPanel from \"./marker/control-panel\";\r\nimport ControlZoom from \"./zoom-control/controlZoom\";\r\nimport PopUpLogEntry from \"./popup/popUp\";\r\nimport AddEntryLocation from \"./entry/addEntryLocation\";\r\nimport MarkerLogEntry from \"./marker/marker\";\r\nimport DrawPolygon from \"./draw-polygon/draw\";\r\n\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n// The following is required to stop \"npm build\" from transpiling mapbox code.\r\n// notice the exclamation point in the import.\r\n// @ts-ignore\r\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\r\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\r\n\r\nconst App = () => {\r\n  const mapRef = useRef(null);\r\n  const [logEntry, setLogEntries] = useState([]);\r\n  const [showPopUp, setShowPopUp] = useState({});\r\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\r\n  const [events, setLogEvents] = useState({});\r\n  const [title, setGetTitle] = useState(\"\");\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    latitude: 47.608013,\r\n    longitude: -122.335167,\r\n    zoom: 9,\r\n    bearing: 0,\r\n    pitch: 0,\r\n  });\r\n\r\n  // All location've already existed\r\n  const getEntries = async () => {\r\n    const logEntries = await listLogEntries();\r\n    console.log(logEntries);\r\n\r\n    setLogEntries(logEntries);\r\n  };\r\n\r\n  // render to show all location was marked\r\n  useEffect(() => {\r\n    getEntries();\r\n  }, []);\r\n\r\n  const onMarkerDragStart = useCallback((event) => {\r\n    setLogEvents((_event) => ({ ..._event, onDragStart: event.lngLat }));\r\n  }, []);\r\n\r\n  const onMarkerDrag = useCallback((event) => {\r\n    setLogEvents((_event) => ({ ..._event, onDrag: event.lngLat }));\r\n  }, []);\r\n\r\n  const onMarkerDragEnd = useCallback((event) => {\r\n    setLogEvents((_event) => ({ ..._event, onDragEnd: event.lngLat }));\r\n\r\n    // show logEntry form to create new marker\r\n    showAddMarkerPopUp(event);\r\n  }, []);\r\n\r\n  const showAddMarkerPopUp = (event) => {\r\n    const [longitude, latitude] = event.lngLat;\r\n    setAddEntryLocation({\r\n      longitude,\r\n      latitude,\r\n    });\r\n  };\r\n\r\n  const deleteMarker = async (id) => {\r\n    const logEntries = await listLogEntries();\r\n\r\n    // get logEntry by id\r\n    logEntries.filter((entry) => entry._id !== id);\r\n\r\n    // async with database\r\n    await deleteLogEntry(id);\r\n\r\n    // reload marker to front-end\r\n    // async save to database\r\n    await getEntries();\r\n  };\r\n\r\n  const OnClick = (event) => {\r\n    try {\r\n      const feature = event.features[0];\r\n      const clusterId = feature.properties.cluster_id;\r\n\r\n      const mapboxSource = mapRef.current.getMap().getSource(\"earthquakes\");\r\n\r\n      mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n\r\n        setViewport({\r\n          ...viewport,\r\n          longitude: feature.geometry.coordinates[0],\r\n          latitude: feature.geometry.coordinates[1],\r\n          zoom,\r\n          transitionDuration: 500,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      mapStyle=\"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\"\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\r\n      onViewportChange={setViewport}\r\n      onDblClick={showAddMarkerPopUp}\r\n      interactiveLayerIds={[clusterLayer.id]}\r\n      onClick={OnClick}\r\n      ref={mapRef}\r\n    >\r\n      <Source\r\n        id=\"earthquakes\"\r\n        type=\"geojson\"\r\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\r\n        cluster={true}\r\n        clusterMaxZoom={14}\r\n        clusterRadius={50}\r\n      >\r\n        <Layer {...clusterLayer} />\r\n        <Layer {...clusterCountLayer} />\r\n        <Layer {...unclusteredPointLayer} />\r\n      </Source>\r\n\r\n      {logEntry.map((entry) => (\r\n        <React.Fragment key={entry._id}>\r\n          <MarkerLogEntry\r\n            entry={entry}\r\n            onMarkerDragStart={onMarkerDragStart}\r\n            onMarkerDrag={onMarkerDrag}\r\n            onMarkerDragEnd={onMarkerDragEnd}\r\n            setShowPopUp={setShowPopUp}\r\n            setGetTitle={setGetTitle}\r\n          />\r\n\r\n          {showPopUp[entry._id] ? (\r\n            <PopUpLogEntry\r\n              entry={entry}\r\n              setShowPopUp={setShowPopUp}\r\n              deleteMarker={deleteMarker}\r\n            />\r\n          ) : null}\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      {addEntryLocation ? (\r\n        <AddEntryLocation\r\n          addEntryLocation={addEntryLocation}\r\n          setAddEntryLocation={setAddEntryLocation}\r\n          getEntries={getEntries}\r\n        />\r\n      ) : null}\r\n\r\n      <div className=\"control-zoom-panel\">\r\n        <ControlPanel\r\n          lngLats={events}\r\n          title={title}\r\n          viewport={setViewport}\r\n          entries={logEntry}\r\n        />\r\n\r\n        <ControlZoom />\r\n\r\n        <DrawPolygon />\r\n      </div>\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './zoom-control/controlZoom.css';\r\nimport './marker/control-panel.css';\r\nimport './popup/popup.css';\r\nimport './viewport/viewport.css';\r\nimport App from './App';\r\nimport './App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}